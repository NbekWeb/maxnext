.header {
  --header-color: var(--accent-color);
  // --header-background: var(--primary-color);

  display: block;
  position: fixed;
  z-index: 1000;
  width: calc(100vw - var(--scrollbar-width) * 1px);
  @include adaptivePixelProperty(padding-top, (50, 50, 20));
  @include adaptivePixelProperty(padding-bottom, (50, 50, 20));
  top: 0px;
  left: 0px;
  transition: 0.3s;

  &__container {
    display: flex;
    position: relative;
    align-items: center;
  }

  &__logo {
    display: block;
    @include adaptivePixelProperty(width, (260, 170, 89));
    height: auto;
    aspect-ratio: 2.36/1;
    margin-right: auto;

    &>svg {
      display: block;
      width: 100%;
      height: 100%;
      fill: var(--header-color);
      transition: 0.4s;
    }
  }

  &__order {
    --button-textColor: var(--primary-color);

    position: relative;
    @include adaptivePixelProperty(width, (260, 170, 120));
    @include adaptivePixelProperty(height, (47, 31, 25));
    @include adaptivePixelProperty(margin-right, (185, 128, 20));

    transition: all 0.5s;

    @media (max-width: 700px) {
      display: none;
    }

    ;

    &::before {
      content: '';
      display: block;
      position: absolute;
      z-index: -1;
      @include adaptivePixelProperty(width, (260, 170, 120));
      height: 100%;
      background-color: var(--accent-color);
      border: 1px solid var(--accent-color);
      @include adaptivePixelProperty(border-radius, (50, 25, 25));
      transition: all 0.5s;
    }

    &>span {
      @include adaptivePixelProperty(font-size, (20, 14, 14));
      letter-spacing: 0.01em;
    }

    &:hover::before {
      @include adaptivePixelProperty(width, (320, 210, 140));
      background-color: transparent;
      border: 1px solid var(--accent-color);
    }

    &:hover {
      --button-textColor: var(--accent-color);
    }
  }

  &__burger {
    display: block;
    @include adaptivePixelProperty(width, (115, 70, 37));
    aspect-ratio: 2/1;
    background: transparent;

    &>svg {
      display: block;
      width: 100%;
      height: 100%;
      fill: var(--header-color);
      transition: 0.4s;

    }
  }
}

.burger {
  display: block;
  max-width: 100vw;
  max-height: 100vh;
  position: fixed;
  overflow: visible;
  z-index: 1200;
  width: 100%;
  height: 100%;
  background: rgba(222, 222, 222, 0);
  translate: 9999px;
  visibility: hidden;
  transition: translate 0s 0.5s, visibility 0s 0.5s, background 0.5s;

  &.open {
    translate: 0px;
    visibility: visible;
    background: rgba(222, 222, 222, 0.88);
    transition: translate 0s 0.0s, visibility 0s 0.0s, background 0.5s;

    @media (max-width: 500px) {
      background: #EAEAEA;
    }

    ;

    & .burger__container {
      translate: 0%;
    }
  }

  &__container {
    position: relative;
    width: 100%;
    height: 100%;
    translate: 100%;
    transition: all 0.5s;

    @media (max-width: 500px) {
      // 568 - height
      // 165 - width
      // 591 - гипотенуза 16 - angle 
      width: calc(50% + 320px * 0.8);
      translate: calc(100% + 160px);

      &::before {
        content: '';
        display: block;
        position: absolute;
        width: calc(120px * 0.8);
        height: 100%;
        background-color: var(--primary-color);
        left: 0px;
        top: 0px;
        translate: -100%;
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 0%);
      }
    }

    ;
  }

  &__close {
    background: transparent;
    position: fixed;
    z-index: 1;
    @include adaptivePixelProperty(top, (50, 45, 30));
    @include adaptivePixelProperty(right, (90, 70, 10));
    @include adaptivePixelProperty(width, (58, 50, 20));
    aspect-ratio: 1/1;
    cursor: pointer;

    @media (max-width: 500px) {
      top: 30px;
      left: calc(100vw - 10px);
      right: auto;
      translate: -100%;
    }

    ;

    &>svg {
      display: block;
      width: 100%;
      height: 100%;
    }
  }

  &__logo {
    display: none;
    position: absolute;
    z-index: 1;
    @include adaptivePixelProperty(width, (260, 170, 89));
    height: auto;
    aspect-ratio: 2.36/1;
    top: 20px;
    left: 10px;

    @media (max-width: 500px) {
      display: block;
    }

    ;

    &>svg {
      display: block;
      width: 100%;
      height: 100%;
      fill: var(--accent-color);
    }
  }

  // 343 1138 1188 20
  // 768
  &__links {
    position: absolute;
    @include adaptivePercentProperty(width, (40, 50, 90));
    height: 100%;
    background-color: var(--primary-color);
    right: 0px;
    top: 0px;
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 45% 100%);

    @media (max-width: 500px) {
      @include adaptivePercentProperty(width, (100, 100, 100));
      clip-path: polygon(0% 0%, 70% 0%, 100% 100%, 0% 100%);
    }

    ;
  }

  //0.36
  &__links-wrapper {
    @include adaptiveVariable(heightBlock, (calc(52 * 1.17 * 4 + 40 * 3), calc(48 * 1.17 * 4 + 35 * 3), calc(34 * 1.17 * 4 + 20 * 3)));
    --maxWidth: calc(var(--heightBlock) * 0.26px);

    display: flex;
    height: 100%;
    @include adaptivePercentProperty(padding-left, (52, 40, 25));
    flex-direction: column;
    justify-content: center;
    @include adaptivePixelProperty(gap, (40, 35, 20));

    @media (max-width: 500px) {
      --maxWidth: 0px;

      justify-content: flex-end;
      @include adaptivePixelProperty(padding-left, (73, 73, 63));
      @include adaptivePixelProperty(padding-bottom, (60, 60, 50));
    }

    ;
  }

  &__link {
    position: relative;
    overflow: hidden;
    width: fit-content;
    @include adaptivePixelProperty(font-size, (52, 48, 34));
    color: #aaa;
    text-transform: lowercase;
    cursor: pointer;
    transition: all 0.4s;

    &:hover {
      color: var(--secondary-textColor);
    }

    &:nth-child(2) {
      translate: calc(var(--maxWidth) / 3);
    }

    &:nth-child(3) {
      translate: calc(var(--maxWidth) / 3 * 2);
    }

    &:nth-child(4) {
      translate: calc(var(--maxWidth));

    }

    @media (min-width: 501px) {
      &::before {
        content: "";
        display: block;
        position: absolute;
        width: 200%;
        height: 1px;
        background: linear-gradient(to right, #939393 0% 50%, transparent 50% 100%);
        bottom: 0px;
        left: 0px;
        translate: -50%;
      }

      &.hoverin::before {
        animation: burger-link-hoverin 0.4s;
        animation-fill-mode: forwards;
      }

      &.hoverout::before {
        animation: burger-link-hoverout 0.4s;
      }

      @keyframes burger-link-hoverin {
        from {
          translate: -50%;
        }

        to {
          translate: 0%;
        }
      }

      @keyframes burger-link-hoverout {
        from {
          translate: 0%;
        }

        to {
          translate: 50%;
        }
      }
    }

    @media (max-width: 500px) {
      color: var(--secondary-color);
    }

    ;
  }
}

html.horizontal-scroll .header {
  @include adaptivePixelProperty(padding-top, (25, 25, 15));
  @include adaptivePixelProperty(padding-bottom, (25, 25, 15));
  background-color: var(--header-background);
}

html:has(.burger.open),
body:has(.burger.open) {
  -webkit-overflow-scrolling: auto;
  touch-action: none;
}

html:has(.burger.open) {
  scrollbar-width: none;
  /* Для Firefox */
}

body:has(.burger.open) {
  -ms-overflow-style: none;
  /* Для Internet Explorer и Edge */
  scrollbar-width: none;
  /* Для Firefox */
}

body:has(.burger.open)::-webkit-scrollbar {
  display: none;
  /* Для WebKit браузеров: Chrome, Safari */
}